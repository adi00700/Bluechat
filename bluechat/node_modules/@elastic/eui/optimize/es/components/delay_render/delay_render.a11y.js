import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

/// <reference types="cypress" />
/// <reference types="cypress-real-events" />
/// <reference types="../../../cypress/support" />

import React, { useState } from 'react';
import { EuiDelayRender } from './delay_render';
import { EuiCheckbox, EuiFieldNumber, EuiFormRow } from '../form';
import { EuiFlexItem } from '../flex';
import { EuiLoadingSpinner } from '../loading';
import { jsx as ___EmotionJSX } from "@emotion/react";
var DelayRender = function DelayRender() {
  var _useState = useState(1000),
    _useState2 = _slicedToArray(_useState, 2),
    minimumDelay = _useState2[0],
    setDelay = _useState2[1];
  var _useState3 = useState(false),
    _useState4 = _slicedToArray(_useState3, 2),
    render = _useState4[0],
    setRender = _useState4[1];
  var status = render ? 'showing' : 'hidden';
  var label = "Child (".concat(status, ")");
  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(EuiFlexItem, null, ___EmotionJSX(EuiFormRow, null, ___EmotionJSX(EuiCheckbox, {
    id: "dummy-id",
    checked: render,
    onChange: function onChange(event) {
      return setRender(event.target.checked);
    },
    label: "Show child"
  })), ___EmotionJSX(EuiFormRow, {
    label: "Minimum delay"
  }, ___EmotionJSX(EuiFieldNumber, {
    value: minimumDelay,
    onChange: function onChange(event) {
      return setDelay(parseInt(event.target.value, 10));
    }
  })), ___EmotionJSX(EuiFormRow, {
    label: label
  }, render ? ___EmotionJSX(EuiDelayRender, {
    delay: minimumDelay
  }, ___EmotionJSX(EuiLoadingSpinner, {
    size: "m"
  })) : ___EmotionJSX(React.Fragment, null))));
};
beforeEach(function () {
  cy.realMount(___EmotionJSX(DelayRender, null));
});
describe('EuiDelayRender', function () {
  describe('Automated accessibility check', function () {
    it('has zero violations on first render', function () {
      cy.checkAxe();
    });
    it('has zero violations when the show child input is checked', function () {
      cy.get('input.euiCheckbox__input').realClick();
      cy.get('div.euiFormRow__fieldWrapper').last().find('span[role="progressbar"]', {
        timeout: 5000
      }).should('exist');
      cy.checkAxe();
    });
    it('has zero violations when the show child input is pressed', function () {
      cy.realPress('Tab');
      cy.get('input.euiCheckbox__input').should('have.focus');
      cy.realPress('Space');
      cy.get('div.euiFormRow__fieldWrapper').last().find('span[role="progressbar"]', {
        timeout: 5000
      }).should('exist');
      cy.checkAxe();
    });
    it('has zero violations when the show child input is toggled', function () {
      cy.realPress('Tab');
      cy.get('input.euiCheckbox__input').should('have.focus');
      cy.realPress('Space');
      cy.get('div.euiFormRow__fieldWrapper').last().find('span[role="progressbar"]', {
        timeout: 5000
      });
      cy.realPress('Space');
      cy.get('div.euiFormRow__fieldWrapper').last().find('span[role="progressbar"]', {
        timeout: 5000
      }).should('not.exist');
      cy.checkAxe();
    });
  });
});