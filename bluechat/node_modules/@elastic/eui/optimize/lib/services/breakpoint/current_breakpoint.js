"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CurrentEuiBreakpointProvider = exports.CurrentEuiBreakpointContext = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _common = require("../../components/common");
var _theme = require("../theme");
var _throttle = require("../throttle");
var _sorting = require("./_sorting");
var _react2 = require("@emotion/react");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

var CurrentEuiBreakpointContext = /*#__PURE__*/(0, _react.createContext)(undefined);

/**
 * Top level provider (nested within EuiProvider) which provides a single
 * resize listener that returns the current breakpoint based on window width
 */
exports.CurrentEuiBreakpointContext = CurrentEuiBreakpointContext;
var CurrentEuiBreakpointProvider = function CurrentEuiBreakpointProvider(_ref) {
  var children = _ref.children;
  // Obtain the breakpoints map from the EUI theme
  var _useEuiTheme = (0, _theme.useEuiTheme)(),
    breakpoints = _useEuiTheme.euiTheme.breakpoint;

  // Ensure the breakpoints map is sorted from largest value to smallest
  var sortedBreakpoints = (0, _react.useMemo)(function () {
    return (0, _sorting.sortMapByLargeToSmallValues)(breakpoints);
  }, [breakpoints]);

  // Find the breakpoint (key) whose value is <= windowWidth starting with largest first
  var getBreakpoint = (0, _react.useCallback)(function (width) {
    return (0, _common.keysOf)(sortedBreakpoints).find(function (key) {
      return sortedBreakpoints[key] <= width;
    });
  }, [sortedBreakpoints]);
  var _useState = (0, _react.useState)(typeof window !== 'undefined' ? getBreakpoint(window.innerWidth) : undefined),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    currentBreakpoint = _useState2[0],
    setCurrentBreakpoint = _useState2[1];
  (0, _react.useEffect)(function () {
    var onWindowResize = (0, _throttle.throttle)(function () {
      setCurrentBreakpoint(getBreakpoint(window.innerWidth));
    }, 50);
    window.addEventListener('resize', onWindowResize);
    return function () {
      return window.removeEventListener('resize', onWindowResize);
    };
  }, [getBreakpoint]);
  return (0, _react2.jsx)(CurrentEuiBreakpointContext.Provider, {
    value: currentBreakpoint
  }, children);
};
exports.CurrentEuiBreakpointProvider = CurrentEuiBreakpointProvider;