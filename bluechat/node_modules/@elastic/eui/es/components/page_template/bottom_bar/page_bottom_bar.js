var _excluded = ["children", "paddingSize", "restrictWidth", "parent"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
import PropTypes from "prop-types";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

import { css } from '@emotion/react';
import React, { useEffect, useRef, useState } from 'react';
import { createPortal } from 'react-dom';
import { findElementBySelectorOrRef } from '../../../services';
import { EuiBottomBar } from '../../bottom_bar';
import { EuiPageSection } from '../../page/page_section';
import { jsx as ___EmotionJSX } from "@emotion/react";
var _ref = process.env.NODE_ENV === "production" ? {
  name: "1y6dyt1-bar",
  styles: "overflow:hidden;flex-shrink:0;label:bar;"
} : {
  name: "1y6dyt1-bar",
  styles: "overflow:hidden;flex-shrink:0;label:bar;",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
export var _EuiPageBottomBar = function _EuiPageBottomBar(_ref2) {
  var children = _ref2.children,
    paddingSize = _ref2.paddingSize,
    restrictWidth = _ref2.restrictWidth,
    parent = _ref2.parent,
    rest = _objectWithoutProperties(_ref2, _excluded);
  // In order for the bottom bar to be placed at the end of the content,
  // it must know what parent element to insert into
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    hasValidAnchor = _useState2[0],
    setHasValidAnchor = _useState2[1];
  var animationFrameId = useRef();
  var parentNode = useRef(null);
  useEffect(function () {
    animationFrameId.current = window.requestAnimationFrame(function () {
      parentNode.current = findElementBySelectorOrRef(parent);
      setHasValidAnchor(parentNode.current ? true : false);
    });
    return function () {
      animationFrameId.current && window.cancelAnimationFrame(animationFrameId.current);
    };
  }, [parent]);
  var bar = ___EmotionJSX(EuiBottomBar, _extends({
    paddingSize: 'none',
    position: "sticky"
    // Hide the overflow in case of larger flex margins than padding
    ,
    css: _ref
    // Using unknown here because of the possible conflict with overriding props and position `sticky`
  }, rest), ___EmotionJSX(EuiPageSection, {
    paddingSize: paddingSize,
    restrictWidth: restrictWidth
  }, children));
  return hasValidAnchor && parentNode.current ? /*#__PURE__*/createPortal(bar, parentNode.current) : bar;
};
_EuiPageBottomBar.propTypes = {
  /**
     * The reference id of the element to insert into
     */
  parent: PropTypes.string,
  /**
     * Sets the max-width of the page,
     * set to `true` to use the default size of `1200px`,
     * set to `false` to not restrict the width,
     * set to a number for a custom width in px,
     * set to a string for a custom width in custom measurement.
     */
  restrictWidth: PropTypes.oneOfType([PropTypes.bool.isRequired, PropTypes.number.isRequired, PropTypes.string.isRequired])
};