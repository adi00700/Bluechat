"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _checkbox_group = require("./checkbox_group");
var _react2 = require("@emotion/react");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; } /*
opyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
or more contributor license agreements. Licensed under the Elastic License
and the Server Side Public License, v 1; you may not use this file except
in compliance with, at your election, the Elastic License 2.0 or the Server
ide Public License, v 1.
reference types="cypress" />
/// <reference types="cypress-real-events" />
/// <reference types="../../../../cypress/support" />
var CheckBoxGroup = function CheckBoxGroup() {
  var checkboxGroupItemId__1 = 'cy-group-id-1';
  var checkboxGroupItemId__2 = 'cy-group-id-2';
  var checkboxGroupItemId__3 = 'cy-group-id-3';
  var checkboxGroupItemId__4 = 'cy-group-id-4';
  var checkboxes = [{
    id: checkboxGroupItemId__1,
    label: 'Option one',
    'data-test-subj': 'cy-checkbox-1'
  }, {
    id: checkboxGroupItemId__2,
    label: 'Option two is checked by default',
    className: 'classNameTest',
    'data-test-subj': 'cy-checkbox-2'
  }, {
    id: checkboxGroupItemId__3,
    label: 'Option three is disabled',
    'data-test-subj': 'cy-checkbox-3',
    disabled: true
  }, {
    id: checkboxGroupItemId__4,
    label: 'Option four',
    'data-test-subj': 'cy-checkbox-4'
  }];
  var _useState = (0, _react.useState)((0, _defineProperty2.default)({}, checkboxGroupItemId__2, true)),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    checkboxIdToSelectedMap = _useState2[0],
    setCheckboxIdToSelectedMap = _useState2[1];
  var _onChange = function onChange(optionId) {
    var newCheckboxIdToSelectedMap = _objectSpread(_objectSpread({}, checkboxIdToSelectedMap), (0, _defineProperty2.default)({}, optionId, !checkboxIdToSelectedMap[optionId]));
    setCheckboxIdToSelectedMap(newCheckboxIdToSelectedMap);
  };
  return (0, _react2.jsx)(_checkbox_group.EuiCheckboxGroup, {
    options: checkboxes,
    idToSelectedMap: checkboxIdToSelectedMap,
    onChange: function onChange(id) {
      return _onChange(id);
    }
  });
};
describe('EuiCheckBoxGroup', function () {
  beforeEach(function () {
    cy.realMount((0, _react2.jsx)(CheckBoxGroup, null));
  });
  describe('Automated accessibility check', function () {
    it('has zero violations when rendered', function () {
      cy.checkAxe();
    });
  });
  describe('Keyboard accessibility', function () {
    it('has zero violations after traversing checkboxes', function () {
      cy.realPress('Tab');
      cy.get('[data-test-subj="cy-checkbox-1"]').should('have.focus');
      cy.realPress('Space');
      cy.get('[data-test-subj="cy-checkbox-1"]').should('be.checked');
      cy.realPress('Tab');
      cy.get('[data-test-subj="cy-checkbox-2"]').should('have.focus');
      cy.realPress('Space');
      cy.get('[data-test-subj="cy-checkbox-2"]').should('not.be.checked');
      cy.realPress('Tab');
      cy.get('[data-test-subj="cy-checkbox-4"]').should('have.focus');
      cy.checkAxe();
    });
  });
  describe('Disabled checkbox accessibility', function () {
    it('affects no change after clicking the disabled checkbox', function () {
      cy.get('[data-test-subj="cy-checkbox-3"]').realClick();
      cy.get('[data-test-subj="cy-checkbox-3"]').should('not.be.checked');
      cy.checkAxe();
    });
  });
});